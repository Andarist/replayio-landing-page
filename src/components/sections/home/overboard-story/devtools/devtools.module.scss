@import 'css/helpers';
@import 'css/variables';

.dev-tools {
  width: 100%;
  border: 1px solid var(--color-gray-lighter);
  border-radius: 12px;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  height: 100%;
  min-height: 390px;

  > div {
    height: 100%;
  }
}

.console-panel {
  height: 100%;

  .logs {
    position: relative;
    font-family: var(--font-mono);
    font-size: 14px;
    padding: 12px 0px;
    height: 100%;

    .log-line {
      position: relative;
      align-items: center;
      padding: 4px 12px;
      color: #01acfd;

      &:not(.active):hover,
      &:global(.active) {
        .travel {
          --translate-x: 0;

          opacity: 1;
        }
      }

      &.is-error {
        background: #f41b52ee;
        color: var(--color-white);

        &::before {
          content: '!';
          font-weight: 900;
          margin-right: 15px;
        }

        .marker {
          display: none;
        }
      }

      .travel {
        --translate-x: -20px;

        padding: 0 12px 0 10px;
        display: inline-flex;
        align-items: center;
        border-radius: 0 var(--border-radius-full) var(--border-radius-full) 0;
        position: absolute;
        top: 50%;
        height: 24px;
        left: -4px;
        background: #03a2fd;
        color: white;
        font-size: 12px;
        font-weight: 600;
        transform: translate(var(--translate-x), -50%);
        transition-property: transform, opacity;
        transition-duration: var(--duration-fast);
        transition-timing-function: ease-out;
        opacity: 0;
        z-index: 1;

        &:hover,
        &.active {
          --translate-x: 4px;
        }

        .icon {
          display: inline-block;
          width: 12px;
          margin-right: 4px;
        }
      }

      .marker {
        margin-right: 15px;
      }
    }
  }
}

.react-dev-tools {
  display: grid;
  grid-template-rows: auto 1fr;
  background: var(--color-white);
  height: 100%;
}

.elements-panel {
  display: flex;
  font-family: monospace;
  background: var(--color-white);
  height: 100%;
}

.react-dev-tools,
.elements-panel {
  .node-line {
    cursor: pointer;
    border-radius: 4px;
    white-space: nowrap;
    min-width: max-content;

    &.active {
      background: var(--color-gray-lightest) !important;
    }

    &:global(.hovered) {
      background: #ecf1ff;
    }
  }
}

.tabs {
  border-bottom: 1px solid var(--color-gray-lighter);
  font-family: var(--font-body);
  font-size: 12px;
  display: flex;
  min-height: 35px;
  overflow-x: auto;

  & > * {
    color: #c0c0c0;
    padding: 8px 13px;

    &:nth-child(1) {
      color: inherit;
    }
  }

  &:not(:first-child) {
    border-top: 1px solid var(--color-gray-lighter);
  }
}

.network-panel {
  display: flex;
  font-family: monospace;
  background: var(--color-white);
  height: 100%;

  .calls {
    width: 100%;
    min-height: 240px;
    max-height: 240px;
    overflow-y: auto;

    .call-line {
      width: 100%;
      max-width: 100%;
      display: flex;
      align-items: center;
      padding: 4px 8px;

      &:hover,
      &.active {
        background: var(--color-gray-lightest);
      }

      &.pending {
        opacity: 0.5;
      }

      @include space-x(8px);

      .method {
        color: var(--color-white);
        padding: 2px 4px;
        background: var(--color-gray-light);
        border-radius: var(--border-radius-sm);
        font-size: 9px;
        text-transform: uppercase;
        font-weight: 600;
        min-width: 30px;
        text-align: center;
      }

      .caller {
        color: #8434d3;
        margin-right: 20px;
      }

      .url {
        color: var(--color-gray-light);
        text-align: right;
        width: 100%;
        overflow: hidden;
        text-overflow: ellipsis;
        margin-left: auto;
        direction: rtl;
      }
    }
  }

  .call-info {
    .call-info-section {
      padding: 10px;
      @include space-y(2px);
    }
  }
}

@media (min-width: $screen-md) {
  .dev-tools {
    height: unset;
    min-height: unset;

    > div {
      height: unset;
    }
  }
}
